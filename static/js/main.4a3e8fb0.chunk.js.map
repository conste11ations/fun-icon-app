{"version":3,"sources":["model/todo.ts","reducers/todo.ts","reducers/createReducer.ts","configureStore.tsx","reducers/index.ts","components/HomeBox.tsx","components/IconBox.tsx","components/IconBoxList.tsx","actions/index.ts","actions/todo.ts","components/TodoDialog.tsx","components/TodoTable.tsx","pages/HomePage.tsx","pages/TodoPage.tsx","withRoot.tsx","App.tsx","ReduxRoot.tsx","index.tsx","images/background-cooltone.png"],"names":["TodoActions","initialState","handlers","todoList","ADD_TODO","state","action","payload","COMPLETE_TODO","map","t","id","completed","UNCOMPLETE_TODO","DELETE_TODO","filter","hasOwnProperty","type","persistConfig","key","version","storage","localforage","blacklist","history","createLogger","createBrowserHistory","middleware","applyMiddleware","thunk","persistedReducer","persistReducer","combineReducers","todoReducer","HomeBox","props","size","other","classes","useStyles","Paper","className","box","Typography","variant","text","styledBy","property","mapping","makeStyles","theme","display","alignItems","borderRadius","background","red","blue","height","width","color","IconBox","root","IconBoxList","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","a","bindActionCreators","addTodo","todo","completeTodo","todoId","getState","uncompleteTodo","deleteTodo","TodoDialog","open","onClose","React","newTodoText","setNewTodoText","todoActions","handleClose","Math","random","Dialog","DialogTitle","TextField","multiline","value","onChange","event","target","textField","DialogActions","Button","onClick","margin","TodoTable","useSelector","paper","Table","table","TableHead","TableRow","TableCell","padding","TableBody","n","hover","Checkbox","checked","IconButton","aria-label","minWidth","HomePage","boxColor","setBoxColor","gutterBottom","length","centerContainer","button","textAlign","paddingTop","paddingLeft","paddingRight","flex","justifyContent","flexDirection","marginTop","TodoPage","setOpen","Grid","container","item","xs","buttonContainer","breakpoints","down","marginBottom","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","Routes","content","exact","path","component","Drawer","drawerHeader","Divider","List","ListItem","push","ListItemIcon","ListItemText","TodoIcon","uncompletedTodos","Badge","badgeContent","Component","backgroundImage","CoolToneBackground","backgroundPosition","backgroundSize","backgroundRepeat","zIndex","overflow","appFrame","position","appBar","boxShadow","drawer","toolBar","fontSize","navIconHide","up","mixins","toolbar","drawerPaper","backgroundColor","default","withRoot","mobileOpen","setMobileOpen","isMobile","useMediaQuery","handleDrawerToggle","AppBar","Toolbar","noWrap","Hidden","mdUp","anchor","ModalProps","keepMounted","smDown","ThemeProvider","CssBaseline","store","createStore","persistor","persistStore","configureStore","rootEl","document","getElementById","ReactDOM","loading","module","exports"],"mappings":"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","file":"static/js/main.4a3e8fb0.chunk.js","sourcesContent":["export interface Todo {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\nexport enum TodoActions {\n  ADD_TODO = \"ADD_TODO\",\n  DELETE_TODO = \"DELETE_TODO\",\n  COMPLETE_TODO = \"COMPLETE_TODO\",\n  UNCOMPLETE_TODO = \"UNCOMPLETE_TODO\",\n}\n\ninterface TodoActionType<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type TodoAction =\n  | TodoActionType<typeof TodoActions.ADD_TODO, Todo>\n  | TodoActionType<typeof TodoActions.COMPLETE_TODO, number>\n  | TodoActionType<typeof TodoActions.UNCOMPLETE_TODO, number>\n  | TodoActionType<typeof TodoActions.DELETE_TODO, number>\n;\n","import { TodoAction, TodoActions, Todo } from \"../model\";\nimport createReducer from \"./createReducer\";\n\nexport const todoList = createReducer<Todo[]>([], {\n\t[TodoActions.ADD_TODO](state: Todo[], action: TodoAction) {\n\t\treturn [...state, action.payload];\n\t},\n\t[TodoActions.COMPLETE_TODO](state: Todo[], action: TodoAction) {\n\t\t// search after todo item with the given id and set completed to true\n\t\treturn state.map(t =>\n\t\t\tt.id === action.payload ? { ...t, completed: true } : t\n\t\t);\n\t},\n\t[TodoActions.UNCOMPLETE_TODO](state: Todo[], action: TodoAction) {\n\t\t// search after todo item with the given id and set completed to false\n\t\treturn state.map(t =>\n\t\t\tt.id === action.payload ? { ...t, completed: false } : t\n\t\t);\n\t},\n\t[TodoActions.DELETE_TODO](state: Todo[], action: TodoAction) {\n\t\t// remove all todos with the given id\n\t\treturn state.filter(t => t.id !== action.payload);\n\t},\n});\n","/**\n * Created by toni on 12.03.2017.\n */\nimport { Reducer } from \"redux\";\nimport { Action } from \"../model\";\n\nexport default function createReducer<S>(\n\tinitialState: S,\n\thandlers: any\n): Reducer<S> {\n\tconst r = (state: S = initialState, action: Action): S => {\n\t\tif (handlers.hasOwnProperty(action.type)) {\n\t\t\treturn handlers[action.type](state, action);\n\t\t} else {\n\t\t\treturn state;\n\t\t}\n\t};\n\n\treturn r as Reducer<S>;\n}\n","/// <reference path=\"../typings/configureStore.d.ts\" />\nimport { createBrowserHistory } from \"history\";\nimport * as localforage from \"localforage\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport { PersistConfig, persistReducer, persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig: PersistConfig<any> = {\n\tkey: \"root\",\n\tversion: 1,\n\tstorage: localforage,\n\tblacklist: [],\n};\n\nconst logger = (createLogger as any)();\nconst history = createBrowserHistory();\n\nconst dev = process.env.NODE_ENV === \"development\";\n\nlet middleware = dev ? applyMiddleware(thunk, logger) : applyMiddleware(thunk);\n\nif (dev) {\n\tmiddleware = composeWithDevTools(middleware);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nexport default () => {\n\tconst store = createStore(persistedReducer, {}, middleware) as any;\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n\nexport { history };\n","import { History } from \"history\";\nimport { combineReducers } from \"redux\";\nimport { Todo } from \"../model\";\nimport * as todoReducer from \"./todo\";\n\nexport interface RootState {\n\ttodoList: Todo[];\n}\n\nexport default (history: History) =>\n\tcombineReducers({\n\t\t...todoReducer,\n\t});\n","import { makeStyles, Paper, Theme, Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\n\ninterface Props {\n\tsize: number;\n\tcolor: \"red\" | \"blue\" | string;\n}\n\nexport function HomeBox(props: Props) {\n\tconst { size, ...other } = props;\n\tconst classes = useStyles(props);\n\n\treturn (\n\t\t<Paper className={classes.box} {...other}>\n\t\t\t<Typography variant=\"subtitle1\" className={classes.text}>\n\t\t\t\tI'm an example how to handle dynamic styles based on props\n\t\t\t</Typography>\n\t\t</Paper>\n\t);\n}\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]];\nconst useStyles = makeStyles((theme: Theme) => ({\n\tbox: (props: Props) => ({\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tborderRadius: 8,\n\t\tbackground: styledBy(\"color\", props, {\n\t\t\tred: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n\t\t\tblue: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n\t\t}),\n\t\theight: props.size,\n\t\twidth: props.size,\n\t}),\n\n\ttext: {\n\t\tcolor: \"white\",\n\t},\n}));\n","// prettier-ignore\nimport { makeStyles } from '@material-ui/core';\nimport * as React from 'react';\n\ninterface Props {\n\n}\n\nexport function IconBox(props: Props) {\n\n  const { } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n\n  root: {\n\n  },\n});\n","// prettier-ignore\nimport { makeStyles } from '@material-ui/core';\nimport * as React from 'react';\n\ninterface Props {\n\n}\n\nexport function IconBoxList(props: Props) {\n\n  const { } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n\n  root: {\n\n  },\n});\n","/// <reference path=\"../../typings/misc.d.ts\" />\nimport { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nexport function useActions(actions: any, deps?: any): any {\n\tconst dispatch = useDispatch();\n\treturn useMemo(\n\t\t() => {\n\t\t\tif (Array.isArray(actions)) {\n\t\t\t\treturn actions.map(a => bindActionCreators(a, dispatch));\n\t\t\t}\n\t\t\treturn bindActionCreators(actions, dispatch);\n\t\t},\n\t\tdeps ? [dispatch, ...deps] : deps\n\t);\n}\n","import { TodoAction, TodoActions, Todo } from \"../model\";\n\nexport function addTodo(todo: Todo): TodoAction {\n\treturn {\n\t\ttype: TodoActions.ADD_TODO,\n\t\tpayload: todo,\n\t};\n}\n\n// Async Function expample with redux-thunk\nexport function completeTodo(todoId: number) {\n\t// here you could do API eg\n\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch({ type: TodoActions.COMPLETE_TODO, payload: todoId });\n\t};\n}\n\nexport function uncompleteTodo(todoId: number): TodoAction {\n\treturn {\n\t\ttype: TodoActions.UNCOMPLETE_TODO,\n\t\tpayload: todoId,\n\t};\n}\n\nexport function deleteTodo(todoId: number): TodoAction {\n\treturn {\n\t\ttype: TodoActions.DELETE_TODO,\n\t\tpayload: todoId,\n\t};\n}\n","// prettier-ignore\nimport { Button, Dialog, DialogActions, DialogTitle, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useActions } from \"../actions\";\nimport * as TodoActions from \"../actions/todo\";\n\ninterface Props {\n\topen: boolean;\n\tonClose: () => void;\n}\n\nexport function TodoDialog(props: Props) {\n\tconst { open, onClose } = props;\n\tconst classes = useStyles();\n\tconst [newTodoText, setNewTodoText] = React.useState(\"\");\n\tconst todoActions = useActions(TodoActions);\n\n\tconst handleClose = () => {\n\t\ttodoActions.addTodo({\n\t\t\tid: Math.random(),\n\t\t\tcompleted: false,\n\t\t\ttext: newTodoText,\n\t\t});\n\t\tonClose();\n\n\t\t// reset todo text if user reopens the dialog\n\t\tsetNewTodoText(\"\");\n\t};\n\n\tconst handleChange = (event: any) => {\n\t\tsetNewTodoText(event.target.value);\n\t};\n\n\treturn (\n\t\t<Dialog open={open} onClose={handleClose}>\n\t\t\t<DialogTitle>Add a new TODO</DialogTitle>\n\t\t\t<TextField\n\t\t\t\tid=\"multiline-flexible\"\n\t\t\t\tmultiline\n\t\t\t\tvalue={newTodoText}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tclassName={classes.textField}\n\t\t\t/>\n\t\t\t<DialogActions>\n\t\t\t\t<Button color=\"primary\" onClick={handleClose}>\n\t\t\t\t\tOK\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nconst useStyles = makeStyles({\n\ttextField: {\n\t\twidth: \"80%\",\n\t\tmargin: 20,\n\t},\n});\n","// prettier-ignore\nimport { Checkbox, IconButton, Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../actions\";\nimport * as TodoActions from \"../actions/todo\";\nimport { Todo } from \"../model\";\nimport { RootState } from \"../reducers\";\n\nexport function TodoTable() {\n\tconst classes = useStyles();\n\tconst todoList = useSelector((state: RootState) => state.todoList);\n\tconst todoActions = useActions(TodoActions);\n\n\tconst onRowClick = (todo: Todo) => {\n\t\tif (todo.completed) {\n\t\t\ttodoActions.uncompleteTodo(todo.id);\n\t\t} else {\n\t\t\ttodoActions.completeTodo(todo.id);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Paper className={classes.paper}>\n\t\t\t<Table className={classes.table}>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell padding=\"default\">Completed</TableCell>\n\t\t\t\t\t\t<TableCell padding=\"default\">Text</TableCell>\n\t\t\t\t\t\t<TableCell padding=\"default\">Delete</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{todoList.map((n: Todo) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\tkey={n.id}\n\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\tonClick={event => onRowClick(n)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">\n\t\t\t\t\t\t\t\t\t<Checkbox checked={n.completed} />\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">{n.text}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\taria-label=\"Delete\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\ttodoActions.deleteTodo(n.id)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</Paper>\n\t);\n}\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\twidth: \"100%\",\n\t\tminWidth: 260,\n\t\tdisplay: \"inline-block\",\n\t},\n\ttable: {\n\t\twidth: \"100%\",\n\t},\n});\n","import { Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HomeBox, IconBox, IconBoxList } from \"../components\";\nimport { RootState } from \"../reducers\";\n\nexport function HomePage() {\n\tconst classes = useStyles();\n\tconst [boxColor, setBoxColor] = React.useState(\"red\");\n\tconst todoList = useSelector((state: RootState) => state.todoList);\n\n\tconst onButtonClick = () =>\n\t\tsetBoxColor(boxColor === \"red\" ? \"blue\" : \"red\");\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tYou have {todoList.length} TODOs in your list!\n\t\t\t</Typography>\n\t\t\t<div className={classes.centerContainer}>\n\t\t\t\t<HomeBox size={300} color={boxColor} />\n\t\t\t\t<IconBox>\n\t\t\t\t</IconBox>\n\t\t\t\t<IconBoxList></IconBoxList>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tonClick={onButtonClick}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\tChange Color\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\theight: \"100%\",\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n\t\tflex: 1,\n\t\theight: \"90%\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tflexDirection: \"column\",\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { TodoDialog, TodoTable } from \"../components\";\n\nexport function TodoPage() {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst handleAddTodo = () => {\n\t\tsetOpen(true);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.root}>\n\t\t\t<TodoDialog open={open} onClose={handleClose} />\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\tTodo List\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<div className={classes.buttonContainer}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={handleAddTodo}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Todo\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<TodoTable />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\tpadding: 20,\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tpaddingTop: 50,\n\t\t\tpaddingLeft: 15,\n\t\t\tpaddingRight: 15,\n\t\t},\n\t},\n\n\tbuttonContainer: {\n\t\twidth: \"100%\",\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n\n\tbutton: {\n\t\tmarginBottom: 15,\n\t},\n}));\n","import { CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as React from \"react\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: \"#e5e5e5\",\n\t\t\tmain: \"#727272\",\n\t\t\tdark: \"#363839\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: \"#ff5e50\",\n\t\t\tmain: \"#e41e26\",\n\t\t\tdark: \"#a90000\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t},\n});\n\nexport function withRoot(Component: any) {\n\tfunction WithRoot(props: object) {\n\t\t// MuiThemeProvider makes the theme available down the React tree\n\t\t// thanks to React context.\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t{/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n","// prettier-ignore\n/// <reference path=\"../typings/App.d.ts\" />\nimport { AppBar, Badge, Divider, Drawer as DrawerMui, Hidden, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Router } from \"react-router-dom\";\nimport { history } from \"./configureStore\";\nimport { Todo } from \"./model\";\nimport { HomePage, TodoPage } from \"./pages\";\nimport { RootState } from \"./reducers/index\";\nimport { withRoot } from \"./withRoot\";\nimport CoolToneBackground from \"./images/background-cooltone.png\";\n\nfunction Routes() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.content}>\n\t\t\t<Route exact={true} path=\"/\" component={HomePage} />\n\t\t\t<Route exact={true} path=\"/home\" component={HomePage} />\n\t\t\t<Route exact={true} path=\"/todo\" component={TodoPage} />\n\t\t</div>\n\t);\n}\n\nfunction Drawer(props: { todoList: Todo[] }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.drawerHeader} />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button onClick={() => history.push(\"/\")}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Home\" />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button onClick={() => history.push(\"/todo\")}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<TodoIcon todoList={props.todoList} />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Todo\" />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t);\n}\n\nfunction App() {\n\tconst classes = useStyles();\n\tconst [mobileOpen, setMobileOpen] = React.useState(true);\n\tconst todoList = useSelector((state: RootState) => state.todoList);\n\tconst isMobile = useMediaQuery((theme: Theme) =>\n\t\ttheme.breakpoints.down(\"sm\")\n\t);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.appFrame}>\n\t\t\t\t\t<AppBar className={classes.appBar}>\n\t\t\t\t\t\t<Toolbar className={classes.toolBar}>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\t\t\tclassName={classes.navIconHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tnoWrap={isMobile}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tFun Icon Shop\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t\t\t<ShoppingCartIcon />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t<Hidden mdUp>\n\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={\"left\"}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Drawer todoList={todoList} />\n\t\t\t\t\t</DrawerMui>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown>\n\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Drawer todoList={todoList} />\n\t\t\t\t\t</DrawerMui>\n\t\t\t\t</Hidden>\n\t\t\t\t<Routes />\n\t\t\t</div>\n\t\t\t</div>\n\t\t</Router >\n\t);\n}\n\nfunction TodoIcon(props: { todoList: Todo[] }) {\n\tlet uncompletedTodos = props.todoList.filter(t => t.completed === false);\n\n\tif (uncompletedTodos.length > 0) {\n\t\treturn (\n\t\t\t<Badge color=\"secondary\" badgeContent={uncompletedTodos.length}>\n\t\t\t\t<FormatListNumberedIcon />\n\t\t\t</Badge>\n\t\t);\n\t} else {\n\t\treturn <FormatListNumberedIcon />;\n\t}\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n\t\tbackgroundImage: `url(${CoolToneBackground})`,\n\t\tbackgroundPosition: 'center',\n\t\tbackgroundSize: 'cover',\n\t\tbackgroundRepeat: 'no-repeat',\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tzIndex: 1,\n\t\toverflow: \"hidden\",\n\t},\n\tappFrame: {\n\t\tposition: \"relative\",\n\t\tdisplay: \"flex\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tappBar: {\n\t\tboxShadow: \"none\", //removes nav bar dropshadow\n\t\tbackground: \"none\",\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tposition: \"absolute\",\n\t\tcolor: \"#f44336\",\n\t},\n\ttoolBar: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tfontSize: \"large\",\n\t},\n\tnavIconHide: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\tdrawerHeader: { ...theme.mixins.toolbar },\n\tdrawerPaper: {\n\t\twidth: 250,\n\t\tbackgroundColor: theme.palette.background.default,\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\twidth: drawerWidth,\n\t\t\tposition: \"relative\",\n\t\t\theight: \"100%\",\n\t\t},\n\t},\n\tcontent: {\n\t\tbackground: \"none\",\n\t\twidth: \"100%\",\n\t\theight: \"calc(100% - 56px)\",\n\t\tmarginTop: 56,\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\theight: \"calc(100% - 64px)\",\n\t\t\tmarginTop: 64,\n\t\t},\n\t},\n}));\n\nexport default withRoot(App);\n","import { Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst { persistor, store } = configureStore();\n\nexport function ReduxRoot() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate\n\t\t\t\tloading={<Typography>Loading...</Typography>}\n\t\t\t\tpersistor={persistor}\n\t\t\t>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ReduxRoot } from \"./ReduxRoot\";\n\nconst rootEl = document.getElementById(\"root\");\nReactDOM.render(<ReduxRoot />, rootEl);\n\n// comment in for PWA with service worker in production mode\n// registerServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/background-cooltone.c829d2db.png\";"],"sourceRoot":""}